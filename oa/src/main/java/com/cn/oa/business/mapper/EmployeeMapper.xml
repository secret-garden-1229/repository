<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cn.oa.business.mapper.EmployeeMapper">

    <resultMap id="BaseResultMap" type="com.cn.oa.domain.Employee">
            <id property="eid" column="eid" jdbcType="INTEGER"/>
            <result property="ename" column="ename" jdbcType="VARCHAR"/>
            <result property="epass" column="epass" jdbcType="VARCHAR"/>
            <result property="realname" column="realname" jdbcType="VARCHAR"/>
            <result property="esex" column="esex" jdbcType="INTEGER"/>
            <result property="entrydate" column="entrydate" jdbcType="DATE"/>
            <result property="leavedate" column="leavedate" jdbcType="DATE"/>
            <result property="position" column="position" jdbcType="INTEGER"/>
            <result property="sal" column="sal" jdbcType="INTEGER"/>
            <result property="estatus" column="estatus" jdbcType="INTEGER"/>
            <result property="did" column="did" jdbcType="INTEGER"/>
    </resultMap>

    <sql id="Base_Column_List">
        eid,ename,epass,
        realname,esex,entrydate,
        leavedate,position,sal,
        estatus,did
    </sql>

    <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
        select
        <include refid="Base_Column_List" />
        from employee
        where  eid = #{eid,jdbcType=INTEGER} 
    </select>

    <select id="selectEmpoyee" resultType="com.cn.oa.domain.Employee">
        select e.eid,e.ename,e.esex,e.realname, d.dname,e.position from employee  e join depart d on e.eid=d.did
        <where>
            <if test="realname!=null and realname!=''">
                and realname like concat('%',#{realname},'%')
            </if>
            <if test="estatus!=null and estatus!=''">
                and estatus=#{estatus}
            </if>
        </where>
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
        delete from employee
        where  eid = #{eid,jdbcType=INTEGER} 
    </delete>
    <insert id="insert" keyColumn="eid" keyProperty="eid" parameterType="com.cn.oa.domain.Employee" useGeneratedKeys="true">
        insert into employee
        ( eid,ename,epass
        ,realname,esex,entrydate
        ,leavedate,position,sal
        ,estatus,did)
        values (#{eid,jdbcType=INTEGER},#{ename,jdbcType=VARCHAR},#{epass,jdbcType=VARCHAR}
        ,#{realname,jdbcType=VARCHAR},#{esex,jdbcType=INTEGER},#{entrydate,jdbcType=DATE}
        ,#{leavedate,jdbcType=DATE},#{position,jdbcType=INTEGER},#{sal,jdbcType=INTEGER}
        ,#{estatus,jdbcType=INTEGER},#{did,jdbcType=INTEGER})
    </insert>
    <insert id="insertSelective" keyColumn="eid" keyProperty="eid" parameterType="com.cn.oa.domain.Employee" useGeneratedKeys="true">
        insert into employee
        <trim prefix="(" suffix=")" suffixOverrides=",">
                <if test="eid != null">eid,</if>
                <if test="ename != null">ename,</if>
                <if test="epass != null">epass,</if>
                <if test="realname != null">realname,</if>
                <if test="esex != null">esex,</if>
                <if test="entrydate != null">entrydate,</if>
                <if test="leavedate != null">leavedate,</if>
                <if test="position != null">position,</if>
                <if test="sal != null">sal,</if>
                <if test="estatus != null">estatus,</if>
                <if test="did != null">did,</if>
        </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
                <if test="eid != null">#{eid,jdbcType=INTEGER},</if>
                <if test="ename != null">#{ename,jdbcType=VARCHAR},</if>
                <if test="epass != null">#{epass,jdbcType=VARCHAR},</if>
                <if test="realname != null">#{realname,jdbcType=VARCHAR},</if>
                <if test="esex != null">#{esex,jdbcType=INTEGER},</if>
                <if test="entrydate != null">#{entrydate,jdbcType=DATE},</if>
                <if test="leavedate != null">#{leavedate,jdbcType=DATE},</if>
                <if test="position != null">#{position,jdbcType=INTEGER},</if>
                <if test="sal != null">#{sal,jdbcType=INTEGER},</if>
                <if test="estatus != null">#{estatus,jdbcType=INTEGER},</if>
                <if test="did != null">#{did,jdbcType=INTEGER},</if>
        </trim>
    </insert>
    <update id="updateByPrimaryKeySelective" parameterType="com.cn.oa.domain.Employee">
        update employee
        <set>
                <if test="ename != null">
                    ename = #{ename,jdbcType=VARCHAR},
                </if>
                <if test="epass != null">
                    epass = #{epass,jdbcType=VARCHAR},
                </if>
                <if test="realname != null">
                    realname = #{realname,jdbcType=VARCHAR},
                </if>
                <if test="esex != null">
                    esex = #{esex,jdbcType=INTEGER},
                </if>
                <if test="entrydate != null">
                    entrydate = #{entrydate,jdbcType=DATE},
                </if>
                <if test="leavedate != null">
                    leavedate = #{leavedate,jdbcType=DATE},
                </if>
                <if test="position != null">
                    position = #{position,jdbcType=INTEGER},
                </if>
                <if test="sal != null">
                    sal = #{sal,jdbcType=INTEGER},
                </if>
                <if test="estatus != null">
                    estatus = #{estatus,jdbcType=INTEGER},
                </if>
                <if test="did != null">
                    did = #{did,jdbcType=INTEGER},
                </if>
        </set>
        where   eid = #{eid,jdbcType=INTEGER} 
    </update>
    <update id="updateByPrimaryKey" parameterType="com.cn.oa.domain.Employee">
        update employee
        set 
            ename =  #{ename,jdbcType=VARCHAR},
            epass =  #{epass,jdbcType=VARCHAR},
            realname =  #{realname,jdbcType=VARCHAR},
            esex =  #{esex,jdbcType=INTEGER},
            entrydate =  #{entrydate,jdbcType=DATE},
            leavedate =  #{leavedate,jdbcType=DATE},
            position =  #{position,jdbcType=INTEGER},
            sal =  #{sal,jdbcType=INTEGER},
            estatus =  #{estatus,jdbcType=INTEGER},
            did =  #{did,jdbcType=INTEGER}
        where   eid = #{eid,jdbcType=INTEGER} 
    </update>

<select id="selectEmpoleeById" resultMap="BaseResultMap">
    select e.* ,d.*from employee e join depart d on e.did = d.did where  e.eid=#{eid}
</select>


</mapper>
